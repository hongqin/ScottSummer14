read.csv("lifespan.csv");
getwd;
getwd();
setwd("~/Dropbox/Alexander_Ramp_Research/2.MathesonLevyMorrison-joined-project/current");
read.csv("lifespan.csv");
read.csv("growth.fitness.hom.csv");
lifespan = read.csv("lifespan.csv");
fit = read.csv("growth.fitness.hom.csv");
fit$orf = as.character( fit$orf );
View(fit)
View(fit)
View(lifespan)
View(lifespan)
data = read.csv("Sce.Spa.KaKs.csv");
View(data)
View(data)
pairs = read.csv("pairs.csv");
View(pairs)
View(pairs)
pairs$ORF1 = as.character(pairs$ORF1);
pairs$ORF2 = as.character(pairs$ORF2);
ids = c(pairs$ORF1, pairs$ORF2);
fix(ids)
fix(ids)
degree = table(ids);
fix(degree)
fix(degree)
net = data.frame(degree);
str(net);
net$id = as.character(net$id);
View(net)
View(net)
head(data);
net[net$id=="YAL005C"]
net[net$id=='YAL005C',]
net[net$id=='YAL012W',]
scmd = read.table( "mutant data.tab", sep="\t", header=T)
fit$Ka = data$Ka[match(fit$orf, data$orfname)];
m = lm(log(fit$YPE)~fit$Ka);
summary(m);
scmd = read.table( "mutant data.tab", sep="\t", header=T)
lifespan$YPD = fit$YPD[match(lifespan$ORF, fit$orf)];
summary(lm(lifespan$RLS_Del_alpha ~ lifespan$YPD));
lifespan$YPE = fit$YPE[match(lifespan$ORF, fit$orf)];
summary(lm(lifespan$RLS_Del_alpha ~ lifespan$YPE));
plot(lifespan$RLS_Del_alpha ~ lifespan$YPE, ylab="Replicative Lifespan", xlab="Fitness Robustness");
abline( m, col="red");
abline( m, col="red");
lifespan$Ka = data$Ka[match(lifespan$ORF,data$orfname)];
m = lm(lifespan$RLS_Del_alpha ~ lifespan$Ka);
summary(m);
plot(lifespan$RLS_Del_alpha ~ lifespan$Ka, ylab="Replicative Lifespan", xlab="Evolutionary Distance(K)");
abline( m, col="red");
setwd("~/github/ScottSummer14/robustnessAA/current2012Fall")
setwd("~/github/ScottSummer14/robustnessAA/current2012Fall")
###INPUT DATA INTO R
#Read lifespan table into R
lifespan = read.csv("lifespan.csv");
#Read lifespan table into R
lifespan = read.csv("data/lifespan.csv");
fit = read.csv("growth.fitness.hom.csv");
#Read growth fitness table into R
fit = read.csv("data/growth.fitness.hom.csv");
fit$orf = as.character( fit$orf );
Kdata = read.csv( "Sce.Spa.KaKs.csv");
#Read evolutionary distance table into R
Kdata = read.csv( "data/Sce.Spa.KaKs.csv");
gPairs = read.csv("sgadata_costanzo2009_stringentCutoff_101120.csv", header=F)
gPairs = read.csv("data/sgadata_costanzo2009_stringentCutoff_101120.csv", header=F)
names(gPairs) = c("ORF1", "Name1", "ORF2", "Name2", NA, NA, NA)
gPairs$ORF1 = as.character( gPairs$ORF1 )
gPairs$ORF2 = as.character( gPairs$ORF2 )
pairs = read.csv("pairs.csv");
#Input protein interaction pairs
pairs = read.csv("data/pairs.csv");
colnames(pairs) = c("ORF1", "ORF2")
pairs$ORF1 = as.character( pairs$ORF1 );
pairs$ORF2 = as.character( pairs$ORF2 );
#Calculate connecting degrees for proteins
ids = c(pairs$ORF1, pairs$ORF2);
degree = table( ids );
#Summarize the results in a dataframe 'net'
net = data.frame(degree);
str(net);
net$id = as.character( net$id);
head(data)
net[net$id=='YAL005C', ]
net[net$id=='YAL012W', ]
scmd = read.table( "scmd.tab", sep="\t", header=T)
#Read cellular morpholy mutant table into R
scmd = read.table( "data/scmd.tab", sep="\t", header=T)
#Normalize the data by column
row.names(scmd) = as.character( scmd$name )
for( j in 2:502 ){
scmd[,j] = ( scmd[,j] - mean(scmd[,j],na.rm=T) )/ sqrt( var( scmd[,j], na.rm=T))
};
head(scmd)
#Calculate the sigma, standard deviation by row
for ( i in 1:4718){
scmd$stddev[i] = sqrt(var( t(scmd[i,2:502]), na.rm=T ) )
scmd$mean[i] = mean( t(scmd[i,2:502]), na.rm=T )
};
scmd$CV = scmd$stddev / (scmd$mean - min(scmd$mean) + 0.01) #make sure CV is positive
head(scmd[,c("CV", "stddev", "mean")])
summary(scmd[,c("CV", "stddev", "mean")])
?plot
View(lifespan)
View(lifespan)
View(data)
View(lifespan)
View(fit)
View(data)
View(net)
View(pairs)
View(pairs)
View(Kdata)
View(net)
plot(college$Retention, college $Grad.rate,+xlab="Retention", ylab="Graduation Rate")
plot(college$Retention, college $Grad.rate,+ xlab="Retention", ylab="Graduation Rate")
lifespan = read.csv("data/lifespan.csv");
fit = read.csv("data/growth.fitness.hom.csv");
fit$orf = as.character( fit$orf
q()
?input data
lifespan$YPD = fit$YPD[match(lifespan$ORF, fit$orf)];
?input
??input
y = x-2
#simple plot
plot( y ~ x );
y = x+4
#simple plot
plot( y ~ x );
y = x + 4
#simple plot
plot( y ~ x );
plot( y ~ x );
y =x+4
y =x+4
#simple plot
plot( y ~ x );
